---
import '../styles/global.css';
import Header from '../components/Header.astro';
import Aside from '../components/Aside.astro';
import Main from '../components/Main.astro';

interface Props {
  title: string;
  description?: string;
}

const { title, description = 'Um blog pessoal' } = Astro.props;
---

<!doctype html>
<html lang="pt-BR" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />
  </head>
  <body
    class="grid grid-cols-1 grid-rows-[auto_1fr_auto] desktop:grid-cols-[310px_1fr_48px] desktop:grid-rows-none h-screen"
  >
    <Header />
    <Main>
      <slot />
    </Main>
    <Aside />

    <script is:inline>
      document.addEventListener('DOMContentLoaded', () => {
        const body = document.body;
        const toggleThemeBtn = document.getElementById('toggle-theme');
        const menuToggle = document.getElementById('menu-toggle');
        const mobileMenu = document.getElementById('mobile-menu');

        toggleThemeBtn?.addEventListener('click', () => {
          body.classList.toggle('dark');
          localStorage.setItem(
            'theme',
            body.classList.contains('dark') ? 'dark' : 'light'
          );
        });

        const savedTheme = localStorage.getItem('theme');
        if (savedTheme) {
          body.classList.remove('dark', 'light');
          body.classList.add(savedTheme);
        } else if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          body.classList.add('dark');
        }

        const toggleMenu = () => {
          const isOpen = mobileMenu?.classList.contains('translate-x-0');

          if (!mobileMenu) return;

          if (isOpen) {
            mobileMenu.classList.remove('translate-x-0', 'opacity-100');
            mobileMenu.classList.add('translate-x-full', 'opacity-0');

            menuToggle?.setAttribute('aria-expanded', 'false');
            mobileMenu.setAttribute('aria-hidden', 'true');

            mobileMenu.addEventListener(
              'transitionend',
              function handler() {
                if (mobileMenu.classList.contains('translate-x-full')) {
                  mobileMenu.classList.add('hidden');
                  mobileMenu.classList.remove('flex');
                }
                mobileMenu.removeEventListener('transitionend', handler);
              },
              { once: true }
            );
          } else {
            mobileMenu.classList.remove('hidden');
            mobileMenu.classList.add('flex');

            void mobileMenu.offsetWidth;

            mobileMenu.classList.remove('translate-x-full', 'opacity-0');
            mobileMenu.classList.add('translate-x-0', 'opacity-100');

            menuToggle?.setAttribute('aria-expanded', 'true');
            mobileMenu.setAttribute('aria-hidden', 'false');
          }
        };

        menuToggle?.addEventListener('click', toggleMenu);

        document.addEventListener('keydown', (e) => {
          if (
            e.key === 'Escape' &&
            mobileMenu?.classList.contains('translate-x-0')
          ) {
            toggleMenu();
          }
        });

        window.addEventListener('resize', () => {
          if (
            window.innerWidth >= 1170 &&
            mobileMenu?.classList.contains('translate-x-0')
          ) {
            toggleMenu();
          }
        });
      });

      const scrollTopBtn = document.getElementById('scroll-to-top');
      const mainEl = document.querySelector('main');

      scrollTopBtn?.addEventListener('click', () => {
        mainEl?.scrollIntoView({ behavior: 'smooth' });
      });
    </script>
  </body>
</html>
