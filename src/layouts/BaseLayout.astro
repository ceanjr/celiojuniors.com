---
// Mesmo código inicial
import '../styles/global.css';
import Header from '../components/Header.astro';
import Aside from '../components/Aside.astro';

import { Lightbulb, ArrowUp } from '@lucide/astro';
import { Icon } from 'astro-icon/components';
import Social from '../components/Social.astro';

interface Props {
  title: string;
  description?: string;
}

const {
  title,
  description = 'A personal blog about web development and more.',
} = Astro.props;
---

<!doctype html>
<html lang="pt-BR" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />
  </head>
  <body
    class="grid grid-cols-1 grid-rows-[auto_1fr_auto] desktop:grid-cols-[310px_1fr_48px] desktop:grid-rows-none min-h-screen"
  >
    <Header
      class="flex desktop:flex-col desktop:items-center desktop:py-16 justify-between px-4 py-2 border-b-2 desktop:border-r-2 border-border"
    >
      <div
        id="profile"
        class="flex desktop:flex-col desktop:gap-0 gap-6 items-center desktop:mb-18"
      >
        <a href="/">
          <img
            src="/images/perfil.jpeg"
            alt="Foto de Célio Júnior"
            class="rounded-full w-12 h-12 desktop:w-24 desktop:h-24 desktop:mb-4 hover:outline-3 hover:outline-hover"
            loading="lazy"
          />
        </a>
        <a href="/">
          <h3 class="text-xl font-semibold desktop:mb-1 hover:text-hover">
            Célio Júnior
          </h3>
        </a>
        <p class="text-center text-xs text-muted hidden desktop:block">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris
          ullamcorper sodales justo, sed vulputate metus tincidunt nec.
        </p>
      </div>

      <button
        id="menu-toggle"
        aria-label="Toggle mobile menu"
        aria-expanded="false"
        class="desktop:hidden flex items-center cursor-pointer hover:text-hover w-6 h-6 self-center"
      >
        <svg
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          viewBox="0 0 24 24"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <path d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>

      <nav
        id="desktop-nav"
        class="hidden desktop:flex flex-col gap-3 text-center text-lg"
      >
        <a class="hover:text-hover font-medium" href="/">Início</a>
        <a class="hover:text-hover font-medium" href="/about">Sobre</a>
        <a class="hover:text-hover font-medium" href="/tags">Tags</a>
        <a class="hover:text-hover font-medium" href="/laboratory"
          >Laboratório</a
        >
      </nav>

      <Social
        class="hidden desktop:flex desktop:gap-4 desktop:mt-auto"
        size="text-3xl"
      />
    </Header>

    <main class="relative">
      <slot />
      <nav
        id="mobile-menu"
        class="absolute top-0 left-0 w-full h-full bg-main z-30 flex-col items-center justify-center text-white text-2xl space-y-6 transition-all duration-500 ease-in-out transform translate-x-full opacity-0 desktop:hidden hidden"
        aria-hidden="true"
      >
        <a href="/" class="hover:text-hover transition-colors duration-200"
          >Início</a
        >
        <a href="/about" class="hover:text-hover transition-colors duration-200"
          >Sobre</a
        >
        <a href="/tags" class="hover:text-hover transition-colors duration-200"
          >Tags</a
        >
        <a
          href="/laboratory"
          class="hover:text-hover transition-colors duration-200">Laboratório</a
        >

        <Social class="flex absolute bottom-10 gap-4" size="text-4xl" />
      </nav>
    </main>

    <Aside
      class="flex flex-row-reverse desktop:flex-col-reverse desktop:items-center justify-between desktop:justify-baseline desktop:py-4 border-t-2 desktop:border-l-2 desktop:border-t-0 border-border px-2"
    >
      <button
        id="scroll-to-top"
        aria-label="Voltar ao topo"
        class="cursor-pointer p-2 bg-background text-foreground rounded-full hover:text-hover"
      >
        <ArrowUp />
      </button>
      <button
        id="toggle-theme"
        aria-label="Toggle dark/light theme"
        class="cursor-pointer focus:outline-none rounded-full p-2"
      >
        <Lightbulb class="w-8 h-8 hover:text-hover" />
      </button>
    </Aside>

    <script is:inline>
      document.addEventListener('DOMContentLoaded', () => {
        const body = document.body;
        const toggleThemeBtn = document.getElementById('toggle-theme');
        const menuToggle = document.getElementById('menu-toggle');
        const mobileMenu = document.getElementById('mobile-menu');

        // Tema
        toggleThemeBtn?.addEventListener('click', () => {
          body.classList.toggle('dark');
          localStorage.setItem(
            'theme',
            body.classList.contains('dark') ? 'dark' : 'light'
          );
        });

        const savedTheme = localStorage.getItem('theme');
        if (savedTheme) {
          body.classList.remove('dark', 'light');
          body.classList.add(savedTheme);
        } else if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          body.classList.add('dark');
        }

        // Abrir/fechar menu
        const toggleMenu = () => {
          const isOpen = mobileMenu?.classList.contains('translate-x-0');

          if (!mobileMenu) return;

          if (isOpen) {
            // Fechar menu
            mobileMenu.classList.remove('translate-x-0', 'opacity-100');
            mobileMenu.classList.add('translate-x-full', 'opacity-0');

            menuToggle?.setAttribute('aria-expanded', 'false');
            mobileMenu.setAttribute('aria-hidden', 'true');

            mobileMenu.addEventListener(
              'transitionend',
              function handler() {
                if (mobileMenu.classList.contains('translate-x-full')) {
                  mobileMenu.classList.add('hidden');
                  mobileMenu.classList.remove('flex');
                }
                mobileMenu.removeEventListener('transitionend', handler);
              },
              { once: true }
            );
          } else {
            // Abrir menu
            mobileMenu.classList.remove('hidden');
            mobileMenu.classList.add('flex');

            void mobileMenu.offsetWidth;

            mobileMenu.classList.remove('translate-x-full', 'opacity-0');
            mobileMenu.classList.add('translate-x-0', 'opacity-100');

            menuToggle?.setAttribute('aria-expanded', 'true');
            mobileMenu.setAttribute('aria-hidden', 'false');
          }
        };

        menuToggle?.addEventListener('click', toggleMenu);

        // Fechar com ESC
        document.addEventListener('keydown', (e) => {
          if (
            e.key === 'Escape' &&
            mobileMenu?.classList.contains('translate-x-0')
          ) {
            toggleMenu();
          }
        });

        // Fechar ao redimensionar
        window.addEventListener('resize', () => {
          if (
            window.innerWidth >= 1170 &&
            mobileMenu?.classList.contains('translate-x-0')
          ) {
            toggleMenu();
          }
        });
      });

      const scrollTopBtn = document.getElementById('scroll-to-top');
      const mainEl = document.querySelector('main');

      scrollTopBtn?.addEventListener('click', () => {
        mainEl?.scrollIntoView({ behavior: 'smooth' });
      });
    </script>
  </body>
</html>
